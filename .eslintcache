[{"/home/stark/REACT-LEVEL2/user-authentication/src/index.js":"1","/home/stark/REACT-LEVEL2/user-authentication/src/App.js":"2","/home/stark/REACT-LEVEL2/user-authentication/src/Component/Home.js":"3","/home/stark/REACT-LEVEL2/user-authentication/src/Auth/Register.js":"4","/home/stark/REACT-LEVEL2/user-authentication/src/Auth/Login.js":"5","/home/stark/REACT-LEVEL2/user-authentication/src/Auth/Account.js":"6","/home/stark/REACT-LEVEL2/user-authentication/src/Auth/Logout.js":"7","/home/stark/REACT-LEVEL2/user-authentication/src/Component/Navbar.jsx":"8","/home/stark/REACT-LEVEL2/user-authentication/src/UserNotes/MyNotes.js":"9","/home/stark/REACT-LEVEL2/user-authentication/src/UserNotes/Notelist.js":"10","/home/stark/REACT-LEVEL2/user-authentication/src/UserNotes/NoteForm.js":"11","/home/stark/REACT-LEVEL2/user-authentication/src/UserNotes/CompleteNote.js":"12","/home/stark/REACT-LEVEL2/user-authentication/src/UserNotes/EditNote.js":"13"},{"size":241,"mtime":1609228173993,"results":"14","hashOfConfig":"15"},{"size":3140,"mtime":1610512711706,"results":"16","hashOfConfig":"15"},{"size":752,"mtime":1610458934764,"results":"17","hashOfConfig":"15"},{"size":4582,"mtime":1609560688659,"results":"18","hashOfConfig":"15"},{"size":4043,"mtime":1610223070216,"results":"19","hashOfConfig":"15"},{"size":1886,"mtime":1609426717003,"results":"20","hashOfConfig":"15"},{"size":831,"mtime":1610512795551,"results":"21","hashOfConfig":"15"},{"size":988,"mtime":1610276369989,"results":"22","hashOfConfig":"15"},{"size":2692,"mtime":1610528478017,"results":"23","hashOfConfig":"15"},{"size":2316,"mtime":1610528639440,"results":"24","hashOfConfig":"15"},{"size":4272,"mtime":1610519642806,"results":"25","hashOfConfig":"15"},{"size":1739,"mtime":1610469103741,"results":"26","hashOfConfig":"15"},{"size":485,"mtime":1610520070624,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1olo5u8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/stark/REACT-LEVEL2/user-authentication/src/index.js",[],["58","59"],"/home/stark/REACT-LEVEL2/user-authentication/src/App.js",[],"/home/stark/REACT-LEVEL2/user-authentication/src/Component/Home.js",["60"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport image from \"./auth.jpeg\";\nimport swal from \"sweetalert\";\nconst Image = styled.img`\n  height: 500px;\n  width: 1000px;\n  margin-top: 0px;\n`;\nconst Div = styled.div`\n  text-align: center;\n`;\n\nconst Paragraph = styled.p`\n  font-size: 1.2rem;\n  color: green;\n  margin-top: 5px;\n`;\nconst Home = (props) => {\n  useEffect(() => {\n    if (props.location.state === \"true\") {\n      swal(\"sorry!\", \"You have to logout first\", \"error\");\n    }\n  }, []);\n  return (\n    <Div>\n      {props.location.state !== \"true\" && (\n        <Paragraph>{props.location.state}</Paragraph>\n      )}\n      <Image src={image} alt=\"authentication image\" />\n    </Div>\n  );\n};\nexport default Home;\n","/home/stark/REACT-LEVEL2/user-authentication/src/Auth/Register.js",[],"/home/stark/REACT-LEVEL2/user-authentication/src/Auth/Login.js",[],"/home/stark/REACT-LEVEL2/user-authentication/src/Auth/Account.js",[],"/home/stark/REACT-LEVEL2/user-authentication/src/Auth/Logout.js",["61","62"],"import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nconst Logout = (props) => {\n  const { LoginStatus } = props;\n  const history = useHistory();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    axios\n      .delete(\"http://dct-user-auth.herokuapp.com/users/logout\", {\n        headers: { \"x-auth\": token },\n      })\n      .then((response) => {\n        const data = response.data;\n        localStorage.removeItem(\"token\");\n        if (data.notice) {\n          LoginStatus();\n          history.push(\"/\");\n          swal(\"Hey!\", \"You have successfully logged out\", \"success\");\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  }, [history]);\n  return null;\n};\n\nexport default Logout;\n","/home/stark/REACT-LEVEL2/user-authentication/src/Component/Navbar.jsx",[],"/home/stark/REACT-LEVEL2/user-authentication/src/UserNotes/MyNotes.js",["63"],"/home/stark/REACT-LEVEL2/user-authentication/src/UserNotes/Notelist.js",[],"/home/stark/REACT-LEVEL2/user-authentication/src/UserNotes/NoteForm.js",["64"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport validator from \"validator\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n  },\n  content: {\n    top: \"40%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    minHeight: \"40%\",\n    minWidth: \"40%\",\n  },\n};\nconst crossStyle = {\n  position: \"absolute\",\n  right: \"0\",\n  top: \"0\",\n  color: \"grey\",\n  border: \"none\",\n  outline: \"none\",\n};\nconst buttonStyle = {\n  position: \"absolute\",\n  right: \"0\",\n  bottom: \"0\",\n  color: \"grey\",\n  backgroundColor: \"light\",\n};\nconst FormWrapper = styled.div`\n  padding-right: 11px;\n`;\nconst Section = styled.div`\n  margin: 10px;\n`;\nconst Input = styled.input`\n  width: 300px;\n  height: 35px;\n  margin: 5px;\n  border: 2px solid #33b6ff;\n  border-radius: 15px;\n  font-weight: bold;\n  font-size: 1.2rem;\n`;\nconst Textarea = styled.textarea`\n  width: 300px;\n  margin: 5px;\n  border: 2px solid #33b6ff;\n  border-radius: 15px;\n  font-weight: bold;\n  font-size: 1.2rem;\n`;\nconst Button = styled.button`\n  width: 80px;\n  height: 40px;\n  font-size: 1.5rem;\n  margin-left: 15px;\n  border: 2px solid #33b6ff;\n  border-radius: 15px;\n  &:hover {\n    color: white;\n    background-color: green;\n  }\n  padding-left: 10px;\n`;\n\nconst Span = styled.span`\n  display: grid;\n  margin-top: -5px;\n  padding-left: 10px;\n  font-size: 1.2rem;\n  color: #fa0000;\n`;\nconst NoteForm = (props) => {\n  const { isNoteFormOpen, handleNoteForm, id, title, body, editKey } = props;\n  console.log(editKey);\n  const [formData, setFormData] = useState({\n    title: title ? title : \"\",\n    body: body ? body : \"\",\n  });\n  const [noteError, setNoteError] = useState({});\n  const errors = {};\n  // useEffect(() => {\n\n  // }, [id]);\n  const handleFormData = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const LoginValidation = () => {\n    // title validation\n    if (validator.isEmpty(formData.title)) {\n      errors.title = \"sorry!! title can't be blank \";\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    LoginValidation();\n\n    if (Object.keys(errors).length === 0) {\n      setNoteError({});\n      if (!editKey) {\n        axios\n          .post(\"http://dct-user-auth.herokuapp.com/api/notes\", formData, {\n            headers: { \"x-auth\": localStorage.getItem(\"token\") },\n          })\n          .then((response) => {\n            // const result = response.data;\n            setFormData({ title: \"\", body: \"\" });\n          })\n          .catch((err) => {\n            alert(err.message);\n          });\n      } else {\n        axios\n          .put(`http://dct-user-auth.herokuapp.com/api/notes/${id}`, formData, {\n            headers: { \"x-auth\": localStorage.getItem(\"token\") },\n          })\n          .then((response) => {\n            const result = response.data;\n            console.log(\"put\", result);\n            setFormData({ title: \"\", body: \"\" });\n          })\n          .catch((err) => {\n            alert(err.message);\n          });\n      }\n    } else {\n      setNoteError(errors);\n    }\n  };\n  return (\n    <Modal\n      isOpen={isNoteFormOpen}\n      onRequestClose={handleNoteForm}\n      style={customStyles}\n    >\n      <FormWrapper>\n        <form onSubmit={handleSubmit}>\n          <Section>\n            <Input\n              type=\"text\"\n              placeholder=\"Title\"\n              value={formData.title}\n              name=\"title\"\n              onChange={handleFormData}\n            />\n            {noteError.title && <Span>{noteError.title}</Span>}\n          </Section>\n          <Section>\n            <Textarea\n              placeholder=\"Body\"\n              rows=\"10\"\n              cols=\"35\"\n              value={formData.body}\n              name=\"body\"\n              onChange={handleFormData}\n            ></Textarea>\n          </Section>\n          <Button type=\"submit\">save</Button>\n        </form>\n      </FormWrapper>\n      <button onClick={handleNoteForm} style={crossStyle}>\n        X\n      </button>\n      <button onClick={handleNoteForm} style={buttonStyle}>\n        Close\n      </button>\n    </Modal>\n  );\n};\n\nexport default NoteForm;\n","/home/stark/REACT-LEVEL2/user-authentication/src/UserNotes/CompleteNote.js",[],"/home/stark/REACT-LEVEL2/user-authentication/src/UserNotes/EditNote.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":24,"column":6,"nodeType":"71","endLine":24,"endColumn":8,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"77","line":26,"column":6,"nodeType":"71","endLine":26,"endColumn":15,"suggestions":"78"},{"ruleId":"73","severity":1,"message":"79","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":9},{"ruleId":"73","severity":1,"message":"80","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'LoginStatus'. Either include it or remove the dependency array.",["84"],"'_' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [props.location.state]",{"range":"89","text":"90"},"Update the dependencies array to be: [LoginStatus, history]",{"range":"91","text":"92"},[524,526],"[props.location.state]",[777,786],"[LoginStatus, history]"]